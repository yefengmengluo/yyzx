<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-3.0.xsd   ">
	<!-- 导入jdbc配置文件 -->
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	<!-- 配置数据源 -->
	<bean id="master" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${writeVote.jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${writeVote.jdbc.username}" />
		<property name="password" value="${writeVote.jdbc.password}" />
	</bean>
	<bean id="slave" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${readVote.jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${readVote.jdbc.username}" />
		<property name="password" value="${readVote.jdbc.password}" />
	</bean>
	<bean id="slaveWkSysMeb" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${readSysmeb.jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${readSysmeb.jdbc.username}" />
		<property name="password" value="${readSysmeb.jdbc.password}" />
	</bean>
	<bean id="slaveWkSysBus" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${readSysBus.jdbc.url}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${readSysBus.jdbc.username}" />
		<property name="password" value="${readSysBus.jdbc.password}" />
	</bean>
	<bean id="dataSource" class="com.wangku.jdbc.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- write -->
				<entry key="master" value-ref="master" />
				<!-- read -->
				<entry key="slave" value-ref="slave" />
				<!-- read wk_sys -->
				<entry key="slaveWkSysMeb" value-ref="slaveWkSysMeb" />
				<entry key="slaveWkSysBus" value-ref="slaveWkSysBus" />
			</map>

		</property>
		<property name="defaultTargetDataSource" ref="master" />
	</bean>
	<!-- 配置SqlSessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 注册实体类别名 -->
		<property name="typeAliasesPackage" value="com.wangku.entity"/>
		<!-- 注册映射文件 -->
		<property name="mapperLocations" value="classpath:com/wangku/mapper/*.xml" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wangku.mapper" />

	</bean>
	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.wangku.**">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- enable autowire -->
	<context:annotation-config />

	<!-- 配置 SqlSessionTemplate SqlSessionTemplate无空参构造 使用构造注入 -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sessionFactory" />
		<!-- 支持批量操作 -->
		<constructor-arg index="1" value="BATCH" />
	</bean>
	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 开启aop注解 -->
	<!-- 配置数据库注解aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<bean id="manyDataSourceAspect" class="com.wangku.jdbc.DataSourceAspect" />
	<aop:config>
		<aop:aspect id="c" ref="manyDataSourceAspect">
			<aop:pointcut id="tx"
				expression="(execution(* com.wangku.service.*.*(..)))" />
			<aop:before pointcut-ref="tx" method="before" />
		</aop:aspect>
	</aop:config>

	<!-- 配置扫描组建包 -->
	<context:component-scan base-package="com.wangku.service.*" />


	<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 定时器开关 结束 -->
</beans>